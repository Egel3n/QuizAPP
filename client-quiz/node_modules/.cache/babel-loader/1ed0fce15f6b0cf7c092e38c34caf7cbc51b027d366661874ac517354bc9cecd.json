{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\egege\\\\Desktop\\\\react\\\\dojo-blog\\\\src\\\\Exam.js\",\n  _s = $RefreshSig$();\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport useFetch from \"./useFetch\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Exam = () => {\n  _s();\n  const {\n    id,\n    question\n  } = useParams();\n  const {\n    data: questions,\n    isPending,\n    error\n  } = useFetch(\"http://localhost:8000/questions?examID=\" + id + \"&id=\" + question);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"exam-frame\",\n    children: [isPending && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 21\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 17\n    }, this), questions && questions.map(question => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"questionFrame\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: question.question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        action: \"\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          id: \"optionA\",\n          value: \"option1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"optionA\",\n          children: [\" A) \", question.optionA]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          id: \"optionB\",\n          value: \"optionB\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"optionB\",\n          children: [\" B) \", question.optionB]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          id: \"optionC\",\n          value: \"optionC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"optionC\",\n          children: [\" C) \", question.optionC]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          id: \"optionD\",\n          value: \"optionD\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"optionD\",\n          children: [\" D) \", question.optionD]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_s(Exam, \"s7IDMkanV9utBYL6EN03X/tc7TE=\", false, function () {\n  return [useParams, useFetch];\n});\n_c = Exam;\nexport default Exam;\nvar _c;\n$RefreshReg$(_c, \"Exam\");","map":{"version":3,"names":["useNavigate","useParams","useFetch","jsxDEV","_jsxDEV","Exam","_s","id","question","data","questions","isPending","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","action","type","value","htmlFor","optionA","optionB","optionC","optionD","_c","$RefreshReg$"],"sources":["C:/Users/egege/Desktop/react/dojo-blog/src/Exam.js"],"sourcesContent":["import { useNavigate, useParams } from \"react-router-dom\";\r\nimport useFetch from \"./useFetch\";\r\n\r\nconst Exam = () => {\r\n  const { id, question } = useParams();\r\n  const {\r\n    data: questions,\r\n    isPending,\r\n    error,\r\n  } = useFetch(\r\n    \"http://localhost:8000/questions?examID=\" + id + \"&id=\" + question\r\n  );\r\n\r\n  return (\r\n    <div className=\"exam-frame\">\r\n      {isPending && <div>Loading...</div>}\r\n      {error && <div>{error}</div>}\r\n      {questions &&\r\n        questions.map((question) => (\r\n          <div className=\"questionFrame\">\r\n            <p>{question.question}</p>\r\n            <form action=\"\">\r\n              <input type=\"radio\" id=\"optionA\" value={\"option1\"} />\r\n              <label htmlFor=\"optionA\"> A) {question.optionA}</label>\r\n              <input type=\"radio\" id=\"optionB\" value={\"optionB\"} />\r\n              <label htmlFor=\"optionB\"> B) {question.optionB}</label>\r\n              <input type=\"radio\" id=\"optionC\" value={\"optionC\"} />\r\n              <label htmlFor=\"optionC\"> C) {question.optionC}</label>\r\n              <input type=\"radio\" id=\"optionD\" value={\"optionD\"} />\r\n              <label htmlFor=\"optionD\"> D) {question.optionD}</label>\r\n            </form>\r\n          </div>\r\n        ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Exam;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}